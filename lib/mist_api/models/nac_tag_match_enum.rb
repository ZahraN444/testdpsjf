# mist_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MistApi
  # if `type`==`match`. enum: `cert_cn`, `cert_issuer`, `cert_san`,
  # `cert_serial`, `cert_sub`, `client_mac`, `idp_role`, `mdm_status`,
  # `radius_group`, `realm`, `ssid`, `user_name`, `usermac_label`
  class NacTagMatchEnum
    NAC_TAG_MATCH_ENUM = [
      # TODO: Write general description for CERT_CN
      CERT_CN = 'cert_cn'.freeze,

      # TODO: Write general description for CERT_ISSUER
      CERT_ISSUER = 'cert_issuer'.freeze,

      # TODO: Write general description for CERT_SAN
      CERT_SAN = 'cert_san'.freeze,

      # TODO: Write general description for CERT_SERIAL
      CERT_SERIAL = 'cert_serial'.freeze,

      # TODO: Write general description for CERT_SUB
      CERT_SUB = 'cert_sub'.freeze,

      # TODO: Write general description for CLIENT_MAC
      CLIENT_MAC = 'client_mac'.freeze,

      # TODO: Write general description for IDP_ROLE
      IDP_ROLE = 'idp_role'.freeze,

      # TODO: Write general description for MDM_STATUS
      MDM_STATUS = 'mdm_status'.freeze,

      # TODO: Write general description for RADIUS_GROUP
      RADIUS_GROUP = 'radius_group'.freeze,

      # TODO: Write general description for REALM
      REALM = 'realm'.freeze,

      # TODO: Write general description for SSID
      SSID = 'ssid'.freeze,

      # TODO: Write general description for USER_NAME
      USER_NAME = 'user_name'.freeze,

      # TODO: Write general description for USERMAC_LABEL
      USERMAC_LABEL = 'usermac_label'.freeze
    ].freeze

    def self.validate(value)
      return false if value.nil?

      NAC_TAG_MATCH_ENUM.include?(value)
    end
  end
end
