# mist_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MistApi
  # NacPortalTemplate Model.
  class NacPortalTemplate < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [NacPortalTypeEnum1Enum]
    attr_accessor :alignment

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :color

    # custom logo custom logo with â€œdata:image/png;base64,â€ format. default
    # null, uses Juniper Mist Logo.
    # @return [String]
    attr_accessor :logo

    # whether to hide â€œPowered by Juniper Mistâ€ and email footers
    # @return [TrueClass | FalseClass]
    attr_accessor :powered_by

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['alignment'] = 'alignment'
      @_hash['color'] = 'color'
      @_hash['logo'] = 'logo'
      @_hash['powered_by'] = 'poweredBy'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        alignment
        color
        logo
        powered_by
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(alignment = SKIP, color = '#1074bc', logo = SKIP,
                   powered_by = false)
      @alignment = alignment unless alignment == SKIP
      @color = color unless color == SKIP
      @logo = logo unless logo == SKIP
      @powered_by = powered_by unless powered_by == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      alignment = hash.key?('alignment') ? hash['alignment'] : SKIP
      color = hash['color'] ||= '#1074bc'
      logo = hash.key?('logo') ? hash['logo'] : SKIP
      powered_by = hash['poweredBy'] ||= false

      # Create object from extracted values.
      NacPortalTemplate.new(alignment,
                            color,
                            logo,
                            powered_by)
    end
  end
end
